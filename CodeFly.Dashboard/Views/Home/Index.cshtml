
<div style="float: right;">
    <div id="loggedout">
        <a id="connectLink" href="#">Connect To Trello</a>
    </div>

    <div id="loggedin">
        <div id="header">
            Logged in to as <span id="fullName"></span>
            <a id="disconnect" href="#">Log Out</a>
        </div>

        <div id="output"></div>
    </div>
</div>
<div class="container" ng-show="authorized">
    <div class="row col-lg-12">
        <ul class="projects">
            <li class="col-lg-3 col-md-4 col-sm-6" ng-repeat="board in boards | filter: closed" ng-click="setDashboard()" ng-show="!dashboardSet">
                <span>{{board.name}}</span>
            </li>
        </ul>
    </div>
    <div class="row col-lg-12">
        <div class="col-lg-6">
            <div class="project" ng-repeat="card in cards | filter: { list: 'In Progress', type: 'Project'}" ng-class="{ blocked: isBlocked(), pending: isPending() }">
                <big>{{card.name}}</big>
                <small>{{card.dueDate}}</small>
                @*<a class="icon" href="{{card.shortUrl}}"><i class="fa fa-eye"></i></a>
                    <a class="icon" href="mailto:{{card.email}}"><i class="fa fa-commenting-o"></i></a>*@
                <br />
                <progress ng-show="card.badges.checkItems > 0" value="{{card.percentComplete}}" max="100"></progress>
            </div>

        </div>
        <div class="col-lg-6">
            <ul ng-repeat="comment in feed">
                <li>{{comment.type}} from {{comment.member}}: {{comment.text}}</li>
            </ul>
        </div>
    </div>
    <div class="row col-lg-12">
        <div class="col-lg-4">
            <div class="deck col-lg-4" ng-repeat="card in cards | filter: { list: 'On Deck' }" ng-class="{ blocked: isBlocked(), pending: isPending() }">
                <big>{{card.name}}</big>
            </div>
        </div>
        <div class="col-lg-4"></div>
        <div class="col-lg-4"></div>
    </div>

    <script>
        var go = function () {
            var COLORS, Confetti, NUM_CONFETTI, PI_2, canvas, confetti, context, drawCircle, i, range, resizeWindow, xpos;

            NUM_CONFETTI = 350;

            COLORS = [[85, 71, 106], [174, 61, 99], [219, 56, 83], [244, 92, 68], [248, 182, 70]];

            PI_2 = 2 * Math.PI;

            canvas = document.getElementById("world");

            context = canvas.getContext("2d");

            window.w = 0;

            window.h = 0;

            resizeWindow = function () {
                window.w = canvas.width = window.innerWidth;
                return window.h = canvas.height = window.innerHeight;
            };

            window.addEventListener('resize', resizeWindow, false);

            window.onload = function () {
                return setTimeout(resizeWindow, 0);
            };

            range = function (a, b) {
                return (b - a) * Math.random() + a;
            };

            drawCircle = function (x, y, r, style) {
                context.beginPath();
                context.arc(x, y, r, 0, PI_2, false);
                context.fillStyle = style;
                return context.fill();
            };

            xpos = 0.5;

            document.onmousemove = function (e) {
                return xpos = e.pageX / w;
            };

            window.requestAnimationFrame = (function () {
                return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
                    return window.setTimeout(callback, 1000 / 60);
                };
            })();

            Confetti = (function () {
                function Confetti() {
                    this.style = COLORS[~~range(0, 5)];
                    this.rgb = "rgba(" + this.style[0] + "," + this.style[1] + "," + this.style[2];
                    this.r = ~~range(2, 6);
                    this.r2 = 2 * this.r;
                    this.replace();
                }

                Confetti.prototype.replace = function () {
                    this.opacity = 0;
                    this.dop = 0.03 * range(1, 4);
                    this.x = range(-this.r2, w - this.r2);
                    this.y = range(-20, h - this.r2);
                    this.xmax = w - this.r;
                    this.ymax = h - this.r;
                    this.vx = range(0, 2) + 8 * xpos - 5;
                    return this.vy = 0.7 * this.r + range(-1, 1);
                };

                Confetti.prototype.draw = function () {
                    var ref;
                    this.x += this.vx;
                    this.y += this.vy;
                    this.opacity += this.dop;
                    if (this.opacity > 1) {
                        this.opacity = 1;
                        this.dop *= -1;
                    }
                    if (this.opacity < 0 || this.y > this.ymax) {
                        this.replace();
                    }
                    if (!((0 < (ref = this.x) && ref < this.xmax))) {
                        this.x = (this.x + this.xmax) % this.xmax;
                    }
                    return drawCircle(~~this.x, ~~this.y, this.r, this.rgb + "," + this.opacity + ")");
                };

                return Confetti;

            })();

            confetti = (function () {
                var j, ref, results;
                results = [];
                for (i = j = 1, ref = NUM_CONFETTI; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
                    results.push(new Confetti);
                }
                return results;
            })();

            window.step = function () {
                var c, j, len, results;
                requestAnimationFrame(step);
                context.clearRect(0, 0, w, h);
                results = [];
                for (j = 0, len = confetti.length; j < len; j++) {
                    c = confetti[j];
                    results.push(c.draw());
                }
                return results;
            };

            step();
            resizeWindow();
        }

    </script>

    <script type="text/javascript">

        $(document).ready($("#chart").kendoChart({
            title: {
                text: "Break-up of Spain Electricity Production for 2008"
            },
            legend: {
                position: "bottom"
            },
            seriesDefaults: {
                labels: {
                    visible: true,
                    format: "{0}%"
                }
            },
            series: [{
                type: "pie",
                data: [{
                    category: "Hydro",
                    value: 22
                }, {
                    category: "Solar",
                    value: 2
                }, {
                    category: "Nuclear",
                    value: 49
                }, {
                    category: "Wind",
                    value: 27
                }]
            }]
        }));
    </script>
